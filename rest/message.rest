### WhatsApp API Testing
### Base URL: http://localhost:3001/api

### 1. Check API Health
GET http://localhost:3001/health

### 2. Get WhatsApp Connection Status
GET http://localhost:3001/api/message/status

### 3. Send Text Message
POST http://localhost:3001/api/message/send
Content-Type: application/json

{
  "to": "6281234567890",
  "message": "Hello from WhatsApp API! üöÄ"
}

### 4. Send Message to Different Number
POST http://localhost:3001/api/message/send
Content-Type: application/json

{
  "to": "6285158226609",
  "message": "Test message from API"
}

### 5. Get Received Messages
GET http://localhost:3001/api/message/received

### 6. Get Received Messages with Limit
GET http://localhost:3001/api/message/received?limit=10

### 7. Clear Received Messages
DELETE http://localhost:3001/api/message/received

### 8. Test Error Handling - Missing Fields
POST http://localhost:3001/api/message/send
Content-Type: application/json

{
  "to": "6281234567890"
}

### 9. Test Error Handling - Invalid JSON
POST http://localhost:3001/api/message/send
Content-Type: application/json

{
  "to": "6281234567890",
  "message": "Test message"
  // Invalid JSON comment
}

### 10. Send Message with Emoji
POST http://localhost:3001/api/message/send
Content-Type: application/json

{
  "to": "6287733760363",
  "message": "This is a long message to test the WhatsApp API. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris."
}

### 11. Send Long Message
POST http://localhost:3001/api/message/send
Content-Type: application/json

{
  "to": "6281234567890",
  "message": "This is a long message to test the WhatsApp API. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris."
}

### 12. Get All WhatsApp Groups
GET http://localhost:3001/api/message/groups

### 13. Reset WhatsApp Session (for banned/error phones)
POST http://localhost:3001/api/message/reset-session

### 14. Root API Endpoint
GET http://localhost:3001/

### Notes:
### - Replace phone numbers with actual WhatsApp numbers
### - Phone numbers should be in international format without + sign
### - Make sure WhatsApp is connected before sending messages
### - Use the status endpoint to check connection before sending
### - Use reset-session endpoint if phone gets banned or has persistent connection issues
### - After session reset, you'll need to scan QR code again
###
### Human-like Behavior Features:
### - Messages are sent with realistic delays (seen ‚Üí typing ‚Üí send)
### - Typing indicators show for calculated time based on message length
### - Random delays between 1-3 seconds for natural behavior
### - Automatic read receipts for incoming messages
### - Online presence management
###
### Trigger System Features:
### - Auto-response to messages with specific prefixes (e.g., .a1)
### - Enable/disable triggers globally via API
### - Manage individual triggers (create, update, delete)
### - Human-like behavior for auto-responses

### 15. Enable Triggers
POST http://localhost:3001/api/trigger/status
Content-Type: application/json

{
  "enabled": true
}

### 16. Get Trigger Configuration
GET http://localhost:3001/api/trigger

### 17. Test Trigger Response - Send .a1 message
### (This should trigger auto-response "Siap Bos" if triggers are enabled)
POST http://localhost:3001/api/message/send
Content-Type: application/json

{
  "to": "6287733760363",
  "message": ".a1"
}

### 18. Create Custom Trigger
POST http://localhost:3001/api/trigger
Content-Type: application/json

{
  "prefix": ".test",
  "response": "This is a test response from the bot!",
  "description": "Test trigger for demonstration"
}

### 19. Test Custom Trigger - Send .test message
POST http://localhost:3001/api/message/send
Content-Type: application/json

{
  "to": "6287733760363",
  "message": ".test"
}

### 20. Disable Triggers
POST http://localhost:3001/api/trigger/status
Content-Type: application/json

{
  "enabled": false
}

### 21. Test Disabled Trigger - Send .a1 message (should not auto-respond)
POST http://localhost:3001/api/message/send
Content-Type: application/json

{
  "to": "6287733760363",
  "message": ".a1 this should not trigger auto-response"
}

### 22. Send Reaction to Message
### Note: You need to get the messageKey from a received message first
### Use the "Get Received Messages" endpoint to get the messageKey structure
POST http://localhost:3001/api/message/reaction
Content-Type: application/json

{
  "messageKey": {
    "id": "MESSAGE_ID_HERE",
    "remoteJid": "6287733760363@s.whatsapp.net",
    "fromMe": false
  },
  "emoji": "üëç"
}

### 23. Send Different Reactions
POST http://localhost:3001/api/message/reaction
Content-Type: application/json

{
  "messageKey": {
    "id": "MESSAGE_ID_HERE",
    "remoteJid": "6287733760363@s.whatsapp.net",
    "fromMe": false
  },
  "emoji": "‚ù§Ô∏è"
}

### 24. Test Reaction Error - Missing messageKey
POST http://localhost:3001/api/message/reaction
Content-Type: application/json

{
  "emoji": "üòÇ"
}

### 25. Test Reaction Error - Invalid messageKey
POST http://localhost:3001/api/message/reaction
Content-Type: application/json

{
  "messageKey": {
    "id": "invalid_id"
  },
  "emoji": "üòÇ"
}

### 26. Remove Reaction (send empty emoji)
POST http://localhost:3001/api/message/reaction
Content-Type: application/json

{
  "messageKey": {
    "id": "MESSAGE_ID_HERE",
    "remoteJid": "6287733760363@s.whatsapp.net",
    "fromMe": false
  },
  "emoji": ""
}

### Notes for Reaction Testing:
### - Replace MESSAGE_ID_HERE with actual message ID from received messages
### - Get messageKey structure from GET /api/message/received endpoint
### - messageKey must contain: id, remoteJid, and optionally fromMe
### - Popular emojis: üëç üëé ‚ù§Ô∏è üòÇ üòÆ üò¢ üò° üî• üíØ ‚úÖ ‚ùå
### - Send empty emoji ("") to remove reaction
### - Make sure WhatsApp is connected before sending reactions